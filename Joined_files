import numpy as np


T_in_hot = 20
T_in_cold = 60
rho = 990.1
Cp = 4179
mu = 0.000651
Pr = 4.31
k = 0.632
k_tube = 386
ltot = 3.5
#Dimensions
di_shell = 0.064
d_noz = 0.02
di_tube = 0.006
do_tube = 0.008
l_shell = 0.35


#defs
def reynolds(v, di, mu = 0.000651, rho = 990.1):
    return(rho*di*v/mu)

def velocity(m_dot,diameter, rho = 990.1):
    a_temp = 3.1415926*0.25*(diameter**2)
    return(m_dot/(rho*a_temp))

def massflow_cold( dp ):
    cold=[-0.87434845, -0.56938938,  0.79677516]
    return(cold[2] +cold[1]*dp +cold[0]*dp**2)
    
def massflow_hot( dp ):
    hot=[-0.56650603, -0.55701057,  0.50554665]
    return (hot[2] +hot[1]*dp +hot[0]*dp**2)


def dp(v, l_pipe, di, f, rho = 990.1):
    dp_temp = 0.5*rho*(v**2)*f*l_pipe/di
    print(dp_temp)
    return(dp_temp)

def friction(Re):
    temp_re = 1.82*np.log10(Re)-1.64
    return (temp_re**(-2))

def kc_ke(tmep1, aprfd):
    return(0.45, 0.8)

def hot_dp_mf(n, massflow_h, di = 0.006, rho = 990.1):
    #hot stream analysis
    l_pipe = 3.5/n
    massflow_per_tube = massflow_h / n
    v_pipe = velocity(massflow_per_tube, di)
    v_noz2 = velocity(massflow_h, 0.02)
    Re_hot = reynolds (v_pipe, di)
    f = friction (Re_hot)
    #ends
    area_r = n*((di**2)/(0.064**2))
    kc, ke = kc_ke(area_r, Re_hot)

    #pdrop for hot stream
    dp_nozzle2 = rho*(v_noz2**2)
    dp_ends = 0.5*rho*(v_pipe**2)*(kc+ke)
    dp_hot_pipe = dp(v_pipe, 0.35, di, f)
    dp_total_hot = dp_nozzle2 + dp_ends + dp_hot_pipe
    massflow_h = massflow_hot(dp_total_hot*0.00001)
    #print(dp_hot_pipe)
    return(massflow_h, dp_total_hot)

def cold_dp_mf(pitch, n_baffle, massflow_c, n_pipe, do_tube = 0.008, di_shell = 0.064, rho = 110.1, l_shell = 0.35):
    baffle_dist = l_shell/(n_baffle + 1)
    a_shell = di_shell*(pitch-do_tube)*baffle_dist/pitch
    a_pipe = (do_tube**2)*3.141592*0.25
    v_shell = velocity(massflow_c, di_shell)
    dprime_shell = di_shell*(a_shell/a_pipe)
    Re_cold = reynolds(v_shell, dprime_shell)


    #assuming a = 0.34 for triangular
    v_noz1 = velocity(massflow_c, di_shell)

    #dp for the shell assuming a = 0.34 for triangular
    dp_shell = (4*0.34*n_pipe*rho)*(v_shell**2)*(Re_cold**(-0.15))
    dp_nozzle1 = rho*(v_noz1**2)
    dp_total_cold = dp_nozzle1 + dp_shell
    massflow_c = massflow_cold(dp_total_cold*0.00001)
    return(massflow_c, dp_total_cold)






n_pipe = 13
n_baffle = 9
pitch = 0.014  #for a square
massflow_h = 0.45
massflow_c = 0.5



for i in range (1, 5):  
    #hot stream analysis
    massflow_h, dp_total_hot = hot_dp_mf(n_pipe, massflow_h,)

    #cold stream analysis
    massflow_c, dp_total_cold = cold_dp_mf(pitch, n_baffle, massflow_c, n_pipe, do_tube = 0.008, di_shell = 0.064, rho = 110.1, l_shell = 0.35)
    
    #print("dp")
    #print (dp_total_hot, dp_total_cold)
    #print("mdot")
    #print (massflow_c, massflow_h)

    








#look at f
#look at baffles



#thermal analysis